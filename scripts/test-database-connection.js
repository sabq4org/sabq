#!/usr/bin/env node

/**
 * ุณูุฑูุจุช ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
 * ูุณุชุฎุฏู ูุชุดุฎูุต ูุดุงูู ุงูุงุชุตุงู ุนูู ุงูุณูุฑูุฑ
 */

const { PrismaClient } = require('@/lib/generated/prisma');

async function testDatabaseConnection() {
  console.log('๐ ุจุฏุก ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...\n');
  
  // ุนุฑุถ ูุนูููุงุช ุงูุจูุฆุฉ
  console.log('๐ ูุนูููุงุช ุงูุจูุฆุฉ:');
  console.log(`NODE_ENV: ${process.env.NODE_ENV}`);
  console.log(`DATABASE_URL ููุฌูุฏ: ${!!process.env.DATABASE_URL}`);
  
  if (process.env.DATABASE_URL) {
    // ุฅุฎูุงุก ูููุฉ ุงููุฑูุฑ ูู ุงูุนุฑุถ
    const dbUrl = process.env.DATABASE_URL;
    const maskedUrl = dbUrl.replace(/:([^:@]+)@/, ':****@');
    console.log(`DATABASE_URL: ${maskedUrl}`);
  }
  
  console.log('\n-----------------------------------\n');
  
  const prisma = new PrismaClient({
    log: ['query', 'info', 'warn', 'error'],
  });
  
  try {
    // ูุญุงููุฉ ุงูุงุชุตุงู
    console.log('๐ ูุญุงููุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    await prisma.$connect();
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ!\n');
    
    // ุงุฎุชุจุงุฑ ุงูุฌุฏุงูู ุงูุฃุณุงุณูุฉ
    console.log('๐ ุงุฎุชุจุงุฑ ุงูุฌุฏุงูู:');
    
    // ุงุฎุชุจุงุฑ ุฌุฏูู ุงููุณุชุฎุฏููู
    try {
      const userCount = await prisma.users.count();
      console.log(`โ ุฌุฏูู users: ${userCount} ูุณุชุฎุฏู`);
    } catch (error) {
      console.log(`โ ุฎุทุฃ ูู ุฌุฏูู users: ${error.message}`);
    }
    
    // ุงุฎุชุจุงุฑ ุฌุฏูู ุงูููุงูุงุช
    try {
      const articleCount = await prisma.articles.count();
      console.log(`โ ุฌุฏูู articles: ${articleCount} ููุงู`);
    } catch (error) {
      console.log(`โ ุฎุทุฃ ูู ุฌุฏูู articles: ${error.message}`);
    }
    
    // ุงุฎุชุจุงุฑ ุฌุฏูู ุงูุชุตูููุงุช
    try {
      const categoryCount = await prisma.categories.count();
      console.log(`โ ุฌุฏูู categories: ${categoryCount} ุชุตููู`);
    } catch (error) {
      console.log(`โ ุฎุทุฃ ูู ุฌุฏูู categories: ${error.message}`);
    }
    
    // ุงุฎุชุจุงุฑ ุฅูุดุงุก ูุญุฐู ุณุฌู ุชุฌุฑูุจู
    console.log('\n๐งช ุงุฎุชุจุงุฑ ุงูุนูููุงุช:');
    try {
      // ุฅูุดุงุก ุชุตููู ุชุฌุฑูุจู
      const testCategory = await prisma.categories.create({
        data: {
          name: 'ุชุตููู ุชุฌุฑูุจู ููุงุฎุชุจุงุฑ',
          slug: `test-category-${Date.now()}`,
          description: 'ูุฐุง ุชุตููู ุชุฌุฑูุจู ุณูุชู ุญุฐูู',
          is_active: false
        }
      });
      console.log('โ ุชู ุฅูุดุงุก ุณุฌู ุชุฌุฑูุจู ุจูุฌุงุญ');
      
      // ุญุฐู ุงูุชุตููู ุงูุชุฌุฑูุจู
      await prisma.categories.delete({
        where: { id: testCategory.id }
      });
      console.log('โ ุชู ุญุฐู ุงูุณุฌู ุงูุชุฌุฑูุจู ุจูุฌุงุญ');
    } catch (error) {
      console.log(`โ ุฎุทุฃ ูู ุงูุนูููุงุช: ${error.message}`);
    }
    
    console.log('\nโ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ุงูุชููุช ุจูุฌุงุญ!');
    
  } catch (error) {
    console.error('\nโ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:');
    console.error(error.message);
    
    if (error.code === 'P1001') {
      console.error('\n๐ก ุชูููุญ: ุชุญูู ูู ุฃู ุนููุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุตุญูุญ ูุฃู ุงูุณูุฑูุฑ ูุนูู');
    } else if (error.code === 'P1002') {
      console.error('\n๐ก ุชูููุญ: ุชุญูู ูู ุฃู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุชูุจู ุงูุงุชุตุงูุงุช ูู ูุฐุง IP');
    } else if (error.code === 'P1003') {
      console.error('\n๐ก ุชูููุญ: ุชุญูู ูู ุฃู ุงุณู ูุงุนุฏุฉ ุงูุจูุงูุงุช ููุฌูุฏ');
    }
    
    process.exit(1);
  } finally {
    await prisma.$disconnect();
    console.log('\n๐ ุชู ูุทุน ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
testDatabaseConnection().catch(console.error); 