#!/bin/bash

# ุณูุฑูุจุช ุงูุงูุชูุงู ูู PlanetScale ุฅูู DigitalOcean Database
# ูุชุทูุจ: mysql client, pscale CLI (ุงุฎุชูุงุฑู)

set -e

echo "๐ ุจุฏุก ุนูููุฉ ุงูุงูุชูุงู ูู PlanetScale ุฅูู DigitalOcean"
echo "=================================================="

# ุงููุชุบูุฑุงุช - ูู ุจุชุญุฏูุซูุง ุญุณุจ ุจูุงูุงุชู
PLANETSCALE_HOST=""
PLANETSCALE_USER=""
PLANETSCALE_PASS=""
PLANETSCALE_DB=""

DO_HOST=""
DO_PORT="25060"
DO_USER="doadmin"
DO_PASS=""
DO_DB="defaultdb"

BACKUP_FILE="planetscale_backup_$(date +%Y%m%d_%H%M%S).sql"

# ุงูุฃููุงู ููุทุจุงุนุฉ
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# ุฏุงูุฉ ูุทุจุงุนุฉ ุงูุฑุณุงุฆู
print_message() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[ุชุญุฐูุฑ]${NC} $1"
}

print_error() {
    echo -e "${RED}[ุฎุทุฃ]${NC} $1"
}

# ุงูุชุญูู ูู ูุฌูุฏ mysql client
if ! command -v mysql &> /dev/null; then
    print_error "mysql client ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุชู ุฃููุงู."
    echo "ุนูู macOS: brew install mysql-client"
    echo "ุนูู Ubuntu: sudo apt-get install mysql-client"
    exit 1
fi

# ุงูุชุญูู ูู ุงููุชุบูุฑุงุช ุงููุทููุจุฉ
if [[ -z "$PLANETSCALE_HOST" || -z "$DO_HOST" ]]; then
    print_error "ูุฑุฌู ุชุญุฏูุซ ุงููุชุบูุฑุงุช ูู ุจุฏุงูุฉ ุงูุณูุฑูุจุช"
    exit 1
fi

# ุงูุฎุทูุฉ 1: ุชุตุฏูุฑ ุงูุจูุงูุงุช ูู PlanetScale
print_message "๐ค ุชุตุฏูุฑ ุงูุจูุงูุงุช ูู PlanetScale..."

mysqldump -h "$PLANETSCALE_HOST" \
    -u "$PLANETSCALE_USER" \
    -p"$PLANETSCALE_PASS" \
    --ssl-mode=REQUIRED \
    --set-gtid-purged=OFF \
    --no-tablespaces \
    --single-transaction \
    --routines \
    --triggers \
    "$PLANETSCALE_DB" > "$BACKUP_FILE"

if [ $? -eq 0 ]; then
    print_message "โ ุชู ุชุตุฏูุฑ ุงูุจูุงูุงุช ุจูุฌุงุญ ุฅูู: $BACKUP_FILE"
    print_message "ุญุฌู ุงูููู: $(du -h $BACKUP_FILE | cut -f1)"
else
    print_error "ูุดู ุชุตุฏูุฑ ุงูุจูุงูุงุช"
    exit 1
fi

# ุงูุฎุทูุฉ 2: ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูุถุบูุทุฉ
print_message "๐๏ธ ุถุบุท ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ..."
gzip -c "$BACKUP_FILE" > "${BACKUP_FILE}.gz"
print_message "โ ุชู ุฅูุดุงุก ูุณุฎุฉ ูุถุบูุทุฉ: ${BACKUP_FILE}.gz"

# ุงูุฎุทูุฉ 3: ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู DigitalOcean
print_message "๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุจูุงูุงุช DigitalOcean..."

mysql -h "$DO_HOST" \
    -P "$DO_PORT" \
    -u "$DO_USER" \
    -p"$DO_PASS" \
    -e "SELECT VERSION();" &> /dev/null

if [ $? -eq 0 ]; then
    print_message "โ ุงูุงุชุตุงู ุจู DigitalOcean ูุงุฌุญ"
else
    print_error "ูุดู ุงูุงุชุตุงู ุจู DigitalOcean"
    exit 1
fi

# ุงูุฎุทูุฉ 4: ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช
print_warning "ุณูุชู ุงูุขู ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช ุฅูู DigitalOcean. ูุฐุง ูุฏ ูุณุชุบุฑู ุจุนุถ ุงูููุช..."
read -p "ูู ุชุฑูุฏ ุงููุชุงุจุนุฉุ (y/n) " -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
    print_message "๐ฅ ุจุฏุก ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช..."
    
    mysql -h "$DO_HOST" \
        -P "$DO_PORT" \
        -u "$DO_USER" \
        -p"$DO_PASS" \
        "$DO_DB" < "$BACKUP_FILE"
    
    if [ $? -eq 0 ]; then
        print_message "โ ุชู ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช ุจูุฌุงุญ!"
    else
        print_error "ูุดู ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช"
        exit 1
    fi
else
    print_warning "ุชู ุฅูุบุงุก ุงูุนูููุฉ"
    exit 0
fi

# ุงูุฎุทูุฉ 5: ุงูุชุญูู ูู ุงูุจูุงูุงุช
print_message "๐ ุงูุชุญูู ูู ุงูุจูุงูุงุช ุงููุณุชูุฑุฏุฉ..."

TABLE_COUNT=$(mysql -h "$DO_HOST" -P "$DO_PORT" -u "$DO_USER" -p"$DO_PASS" "$DO_DB" \
    -e "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema='$DO_DB';" \
    -s -N)

print_message "โ ุชู ุงุณุชูุฑุงุฏ $TABLE_COUNT ุฌุฏูู"

# ุงูุฎุทูุฉ 6: ุฅูุดุงุก ููู .env.digitalocean
print_message "๐ ุฅูุดุงุก ููู ุฅุนุฏุงุฏุงุช ุฌุฏูุฏ..."

cat > .env.digitalocean << EOF
# DigitalOcean Database Configuration
DATABASE_URL="mysql://${DO_USER}:${DO_PASS}@${DO_HOST}:${DO_PORT}/${DO_DB}?ssl-mode=REQUIRED"

# ูุณุฎ ุงูุฅุนุฏุงุฏุงุช ุงูุฃุฎุฑู ูู .env.local
EOF

print_message "โ ุชู ุฅูุดุงุก .env.digitalocean"

# ุงูุฎุทูุฉ 7: ุงุฎุชุจุงุฑ Prisma
print_message "๐งช ุงุฎุชุจุงุฑ ุงุชุตุงู Prisma..."

# ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู .env ุงูุญุงูู
if [ -f .env ]; then
    cp .env .env.backup
fi

# ูุณุฎ ุงูุฅุนุฏุงุฏุงุช ุงูุฌุฏูุฏุฉ
cp .env.digitalocean .env

# ุงุฎุชุจุงุฑ Prisma
npx prisma db pull

if [ $? -eq 0 ]; then
    print_message "โ Prisma ูุชุตู ุจูุฌุงุญ!"
    npx prisma generate
else
    print_error "ูุดู ุงุชุตุงู Prisma"
    # ุงุณุชุฑุฌุงุน ุงูุฅุนุฏุงุฏุงุช ุงููุฏููุฉ
    if [ -f .env.backup ]; then
        mv .env.backup .env
    fi
fi

# ุงูุฎุทูุฉ 8: ูุตุงุฆุญ ูุง ุจุนุฏ ุงูุงูุชูุงู
echo
echo "=================================================="
print_message "๐ ุชูุช ุนูููุฉ ุงูุงูุชูุงู ุจูุฌุงุญ!"
echo
echo "๐ ุงูุฎุทูุงุช ุงูุชุงููุฉ:"
echo "1. ุชุญุฏูุซ ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู DigitalOcean App Platform"
echo "2. ุฅุนุงุฏุฉ ูุดุฑ ุงูุชุทุจูู"
echo "3. ุงุฎุชุจุงุฑ ุฌููุน ุงููุธุงุฆู"
echo "4. ูุฑุงูุจุฉ ุงูุฃุฏุงุก ููุฏุฉ 24 ุณุงุนุฉ"
echo
echo "๐พ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุงููุญููุธุฉ:"
echo "- $BACKUP_FILE (SQL)"
echo "- ${BACKUP_FILE}.gz (ูุถุบูุท)"
echo "- .env.backup (ุฅุนุฏุงุฏุงุช ูุฏููุฉ)"
echo
print_warning "ุงุญุชูุธ ุจูุฐู ุงููุณุฎ ููุฏุฉ ุฃุณุจูุน ุนูู ุงูุฃูู!"
echo "==================================================" 