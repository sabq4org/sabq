// ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจุงุณุชุฎุฏุงู Prisma
require('dotenv').config({ path: '.env.local' });
const { PrismaClient } = require('../lib/generated/prisma');

async function testConnection() {
  console.log('๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช PostgreSQL ุนุจุฑ Prisma');
  console.log('=====================================================');
  
  const prisma = new PrismaClient();
  
  try {
    console.log('\n๐ก ูุญุงููุฉ ุงูุงุชุตุงู...');
    
    // ุงุฎุชุจุงุฑ ุจุณูุท - ุนุฏ ุงููุณุชุฎุฏููู
    const userCount = await prisma.user.count();
    console.log(`\nโ ุงูุงุชุตุงู ูุงุฌุญ!`);
    console.log(`\n๐ ุฅุญุตุงุฆูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช:`);
    console.log(`๐ฅ ุนุฏุฏ ุงููุณุชุฎุฏููู: ${userCount}`);
    
    // ุนุฏ ุงูุชุตูููุงุช
    const categoryCount = await prisma.category.count();
    console.log(`๐ ุนุฏุฏ ุงูุชุตูููุงุช: ${categoryCount}`);
    
    // ุนุฏ ุงูููุงูุงุช
    const articleCount = await prisma.article.count();
    console.log(`๐ ุนุฏุฏ ุงูููุงูุงุช: ${articleCount}`);
    
    // ุนุฏ ุงูุชุนูููุงุช
    const commentCount = await prisma.comment.count();
    console.log(`๐ฌ ุนุฏุฏ ุงูุชุนูููุงุช: ${commentCount}`);
    
    // ุนุฏ ุงููููุงุช ุงูููุชุงุญูุฉ
    const keywordCount = await prisma.keyword.count();
    console.log(`๐ท๏ธ  ุนุฏุฏ ุงููููุงุช ุงูููุชุงุญูุฉ: ${keywordCount}`);
    
    // ูุนูููุงุช ุขุฎุฑ ููุงู
    const lastArticle = await prisma.article.findFirst({
      orderBy: { createdAt: 'desc' },
      select: { title: true, createdAt: true }
    });
    
    if (lastArticle) {
      console.log(`\n๐ฐ ุขุฎุฑ ููุงู:`);
      console.log(`   ุงูุนููุงู: ${lastArticle.title}`);
      console.log(`   ุงูุชุงุฑูุฎ: ${lastArticle.createdAt.toLocaleDateString('ar-SA')}`);
    }
    
    console.log('\nโจ ูุงุนุฏุฉ ุงูุจูุงูุงุช PostgreSQL ุชุนูู ุจุดูู ููุชุงุฒ!');
    
  } catch (error) {
    console.error('\nโ ูุดู ุงูุงุชุตุงู!');
    console.error('ุงูุฎุทุฃ:', error.message);
    
    if (error.message.includes('P1001')) {
      console.log('\n๐ ูุดููุฉ ูู ุงูุงุชุตุงู ุจุงูุฎุงุฏู. ุชุฃูุฏ ูู:');
      console.log('1. ูุงุนุฏุฉ ุงูุจูุงูุงุช ุชุนูู ูู DigitalOcean');
      console.log('2. IP ุงูุฎุงุต ุจู ูุถุงู ูู Trusted Sources');
      console.log('3. ุฅุนุฏุงุฏุงุช SSL ุตุญูุญุฉ');
    } else if (error.message.includes('P1002')) {
      console.log('\nโฑ๏ธ  ุงูุชูุช ูููุฉ ุงูุงุชุตุงู. ูุฏ ุชููู ุงููุดููุฉ:');
      console.log('1. ุงูุฎุงุฏู ุจุนูุฏ ุฃู ุจุทูุก');
      console.log('2. ุฌุฏุงุฑ ุงูุญูุงูุฉ ูุญุฌุจ ุงูุงุชุตุงู');
    }
    
  } finally {
    await prisma.$disconnect();
  }
}

testConnection(); 