const fs = require('fs');
const path = require('path');

// ูุฑุงุกุฉ ุงูููู
const filePath = path.join(__dirname, '..', 'data', 'articles.json');
let content = fs.readFileSync(filePath, 'utf8');

console.log('๐ง ุจุฏุก ุฅุตูุงุญ ููู JSON...');

// ุฅุตูุงุญ ุงููุดุงูู ุงููุนุฑููุฉ
let fixed = false;

// ุฅุตูุงุญ 1: ุฅุฒุงูุฉ ุงููุตูุต ุงููุนุทูุฉ
const brokenTextPatterns = [
  /### ุงู%/g,
  /ููุณุคูููุฉ\.\\n\\%/g,
  /ููุฉ\.\\n\\n### ุงู%/g
];

brokenTextPatterns.forEach((pattern, index) => {
  if (pattern.test(content)) {
    console.log(`ุฅุตูุงุญ ุงููุต ุงููุนุทู ${index + 1}...`);
    content = content.replace(pattern, '');
    fixed = true;
  }
});

// ุฅุตูุงุญ 2: ุฅุตูุงุญ ุงูููุงุตู ุงูููููุฏุฉ
const missingCommaPattern = /"([^"]+)"\s*\n\s*"([^"]+)"/g;
if (missingCommaPattern.test(content)) {
  console.log('ุฅุตูุงุญ ุงูููุงุตู ุงูููููุฏุฉ...');
  content = content.replace(missingCommaPattern, '"$1",\n      "$2"');
  fixed = true;
}

// ุฅุตูุงุญ 3: ุฅุตูุงุญ ุงูุฃููุงุณ ุงูููููุฏุฉ
const missingBracePattern = /}\s*\n\s*]/g;
if (missingBracePattern.test(content)) {
  console.log('ุฅุตูุงุญ ุงูุฃููุงุณ ุงูููููุฏุฉ...');
  content = content.replace(missingBracePattern, '}\n    ]');
  fixed = true;
}

// ุฅุตูุงุญ 4: ุฅุฒุงูุฉ ุงูุฃุญุฑู ุบูุฑ ุงููุฑุฆูุฉ
content = content.replace(/[\u0000-\u001F\u007F-\u009F]/g, '');

// ุงูุชุญูู ูู ุตุญุฉ JSON
try {
  JSON.parse(content);
  console.log('โ JSON ุตุญูุญ ุจุนุฏ ุงูุฅุตูุงุญ');
  
  if (fixed) {
    // ุญูุธ ุงูููู ุงููุตูุญ
    fs.writeFileSync(filePath, content, 'utf8');
    console.log('๐พ ุชู ุญูุธ ุงูููู ุงููุตูุญ');
  } else {
    console.log('โน๏ธ ูู ูุชู ุงูุนุซูุฑ ุนูู ูุดุงูู ูุงุถุญุฉ');
  }
} catch (error) {
  console.error('โ ูุง ูุฒุงู ููุงู ุฎุทุฃ ูู JSON:', error.message);
  
  // ูุญุงููุฉ ุฅุตูุงุญ ุฅุถุงูู
  console.log('๐ง ูุญุงููุฉ ุฅุตูุงุญ ุฅุถุงูู...');
  
  // ุฅุฒุงูุฉ ุงูุณุทุฑ ุงููุนุทู
  const lines = content.split('\n');
  const fixedLines = lines.filter((line, index) => {
    // ุชุฎุทู ุงูุณุทุฑ 93 ุฅุฐุง ูุงู ูุนุทูุงู
    if (index === 92) { // ุงูุณุทุฑ 93 (0-based)
      console.log('ุชุฎุทู ุงูุณุทุฑ ุงููุนุทู:', line.substring(0, 50) + '...');
      return false;
    }
    return true;
  });
  
  content = fixedLines.join('\n');
  
  try {
    JSON.parse(content);
    console.log('โ ุชู ุฅุตูุงุญ JSON ุจูุฌุงุญ');
    fs.writeFileSync(filePath, content, 'utf8');
    console.log('๐พ ุชู ุญูุธ ุงูููู ุงููุตูุญ');
  } catch (finalError) {
    console.error('โ ูุดู ูู ุฅุตูุงุญ JSON:', finalError.message);
    
    // ุงุณุชุนุงุฏุฉ ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ
    const backupPath = filePath + '.backup';
    if (fs.existsSync(backupPath)) {
      console.log('๐ ุงุณุชุนุงุฏุฉ ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ...');
      fs.copyFileSync(backupPath, filePath);
      console.log('โ ุชู ุงุณุชุนุงุฏุฉ ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ');
    }
  }
} 